datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  ELEVE
  PILOTE
  USER
}

model User {
  id            String        @id @default(cuid()) @map("_id")
  name          String?
  firstName     String?
  email         String?       @unique
  emailVerified DateTime?
  phone         String?
  color         String?       @default("")
  image         String?
  password      String?
  address       Address?      @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId     String?       @unique
  role          UserRole      @default(USER)
  accounts      Account[]
  appointments  Appointment[]
}

model Account {
  id                String  @id @default(cuid()) @map("_id")
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Address {
  id      String  @id @default(cuid()) @map("_id")
  User    User?
  adress  String?
  city    String?
  zipCode String?
  country String?
}

model VerificationToken {
  id      String   @id @default(cuid()) @map("_id")
  email   String
  userID  String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid()) @map("_id")
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum appointmentType {
  COURS   @map("Cours")
  BAPTEME @map("Bapteme")
  ALL     @map("Cours / Bapteme")
}

model Appointment {
  id               String           @id @default(cuid()) @map("_id")
  interAppointment Int?
  type             appointmentType?
  studentType      appointmentType?
  piloteID         String
  piloteFirstname  String           @default("")
  color            String?          @default("")
  vehiculeID       String?
  studentID        String?
  studentFirstname String?
  recurrence       Boolean?
  recurenceID      String?
  startDate        DateTime?
  endDate          DateTime?
  appointmentDate  DateTime?

  pilote User @relation(fields: [piloteID], references: [id])
}
